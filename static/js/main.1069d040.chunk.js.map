{"version":3,"sources":["Image/mypicture3.png","Image/peaceful.jpg","Image/chatbot.png","Image/dogImage.jpg","Image/background.jpg","Components/ChatBot.js","Components/HomePage.js","Components/updating.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ChatBot","props","handleChange","event","setState","userMessage","target","value","handleVoice","recognition","window","SpeechRecognition","webkitSpeechRecognition","lang","interimResults","maxAlternatives","start","buttonVoice","document","getElementById","addEventListener","classList","add","console","log","e","last","results","length","text","transcript","click","remove","setTimeout","handleSubmit","preventDefault","state","trim","msg","user","conversation","fetch","method","headers","body","JSON","stringify","message","then","response","result","tours","map","tour","tour_id","tour_name","tour_cost","checked","synthVoice","catch","error","sendError","name","res","json","isLoaded","this","element","scrollTop","scrollHeight","box","contains","capture","once","passive","speechSynthesis","cancel","synth","utterance","SpeechSynthesisUtterance","voices","getVoices","voice","split","speak","date","Date","h","getHours","m","getMinutes","slice","chat","index","i","className","updateScroll","key","formatDate","id","src","bot","style","type","onChange","changeSpeech","onSubmit","icon","faMicrophone","onClick","onInput","autoFocus","placeholder","openChatbot","faCommentDots","Component","HomePage","useEffect","backgroundImage","background","backgroundRepeat","Fragment","pic3","alt","href","to","Updating","picDog","App","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1069d040.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mypicture3.bc44a536.png\";","module.exports = __webpack_public_path__ + \"static/media/peaceful.cd6eeecd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chatbot.ca6957ff.png\";","module.exports = __webpack_public_path__ + \"static/media/dogImage.f0146a16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background.2e874686.jpg\";","import React,{Component} from 'react';\r\n// get our fontawesome imports\r\nimport { faCommentDots, faMicrophone } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport '../css/chatbot.css'\r\nimport bot from \"../Image/chatbot.png\"\r\nclass ChatBot extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            tours: [],\r\n            name:'',\r\n            userMessage: '',\r\n            conversation: [],\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch('http://localhost:3001/tours')\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded : true,\r\n                        tours : result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded : true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n    handleChange = event => {\r\n        this.setState({ userMessage: event.target.value });\r\n    }\r\n    sendError(){\r\n        const msg = {\r\n            text: \"Xin lỗi, hiện tại chatbot đang gặp sự cố. Vui lòng liên hệ với chúng tôi để được hỗ trợ.\",\r\n            user: 'ai',\r\n        };\r\n        this.setState({\r\n            conversation: [...this.state.conversation, msg],\r\n        });\r\n    }\r\n    handleVoice = event => {\r\n        const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n        const recognition = new SpeechRecognition();\r\n\r\n        recognition.lang = 'vi-VN';\r\n        recognition.interimResults = false;\r\n        recognition.maxAlternatives = 1;\r\n        recognition.start();\r\n        const buttonVoice = document.getElementById(\"voice\");\r\n        recognition.addEventListener('speechstart', () => {\r\n            buttonVoice.classList.add(\"speak\");\r\n            console.log('Speech has been detected.');\r\n        });\r\n        var check = false;\r\n        recognition.addEventListener('result', (e) => {\r\n            console.log('Result has been detected.');\r\n            let last = e.results.length - 1;\r\n            let text = e.results[last][0].transcript;\r\n            this.setState({ userMessage: text });\r\n            document.getElementById(\"send-btn\").click();\r\n            buttonVoice.classList.remove(\"speak\");\r\n        });\r\n\r\n        setTimeout(()=>{\r\n            buttonVoice.classList.remove(\"speak\");\r\n        }, 4000);\r\n\r\n    }\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        \r\n        if (!this.state.userMessage.trim()) return;\r\n        const msg = {\r\n          text: this.state.userMessage,\r\n          user: 'human',\r\n        };\r\n\r\n        this.setState({\r\n            conversation: [...this.state.conversation, msg],\r\n        });\r\n\r\n        fetch('http://localhost:5000/chat', {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json' },\r\n          body: JSON.stringify({\r\n            message: this.state.userMessage,\r\n          }),\r\n        })\r\n        .then(response => response.text())\r\n        .then(result => {\r\n            if(result === 'tours') {\r\n                const msg = {\r\n                    text: 'You can review some tour of SBoTour such as:',\r\n                    user: 'ai',\r\n                };\r\n                this.setState({\r\n                    conversation: [...this.state.conversation, msg],\r\n                });\r\n                this.state.tours.map(tour => {\r\n                    var tour_summaries = \"Tour code: \" + tour.tour_id + \"\\nTour name: \" + tour.tour_name\r\n                        + \".\\n Price: \" + tour.tour_cost + \"USD\";\r\n                    const msg = {\r\n                        text: tour_summaries,\r\n                        user: 'ai',\r\n                    };\r\n                    this.setState({\r\n                        conversation: [...this.state.conversation, msg],\r\n                    });              \r\n                });\r\n                return;\r\n            }\r\n            const msg = {\r\n                text: result,\r\n                user: 'ai',\r\n            };\r\n            this.setState({\r\n                conversation: [...this.state.conversation, msg],\r\n            });\r\n            if(document.getElementById(\"speech\").checked == true){\r\n                this.synthVoice(result)\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log('error', error);\r\n            this.sendError();\r\n        });\r\n        this.setState({ userMessage: '' });\r\n    };\r\n    updateScroll(){\r\n        try {\r\n            var element = document.getElementById(\"message\");\r\n            element.scrollTop = element.scrollHeight;\r\n        } catch (e) {\r\n        \r\n        }\r\n    }\r\n    openChatbot(){\r\n        var box = document.getElementById(\"chatbot\");\r\n        if (box.classList.contains('hidden')) {\r\n            box.classList.remove('hidden');\r\n            setTimeout(function () {\r\n              box.classList.remove('visuallyhidden');\r\n            }, 20);\r\n          } else {\r\n            box.classList.add('visuallyhidden');    \r\n            box.addEventListener('transitionend', function(e) {\r\n              box.classList.add('hidden');\r\n            }, {\r\n              capture: false,\r\n              once: true,\r\n              passive: false\r\n            });\r\n          }\r\n    }\r\n    synthVoice(text) {\r\n        try {\r\n            window.speechSynthesis.cancel();\r\n            const synth = window.speechSynthesis;\r\n            const utterance = new SpeechSynthesisUtterance();\r\n            var voices = window.speechSynthesis.getVoices();\r\n            utterance.voice = voices[3];\r\n            \r\n            utterance.text = text.split(\"  \")[0];\r\n            synth.speak(utterance);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    changeSpeech() {\r\n        try {\r\n            window.speechSynthesis.cancel();\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    formatDate() {\r\n        const date = new Date();\r\n        const h = \"0\" + date.getHours();\r\n        const m = \"0\" + date.getMinutes();\r\n      \r\n        return `${h.slice(-2)}:${m.slice(-2)}`;\r\n    }\r\n\r\n    render(){\r\n        const ChatBubble = (text, i, className) => {\r\n            setTimeout(() => {\r\n                this.updateScroll();\r\n            }, 0);\r\n            if(className==='ai') {\r\n                return (\r\n                    <div key={`${className}-${i}`} className={`chat-bubble`}>\r\n                        <div className=\"msg left-msg\">\r\n                          <div\r\n                              className=\"msg-img ai\"\r\n                          ></div>\r\n                          <div className=\"msg-bubble\">\r\n                              <div className=\"msg-info\">\r\n                                  <div className=\"msg-info-name\">Bot</div>\r\n                                  <div className=\"msg-info-time\">{this.formatDate()}</div>\r\n                              </div>\r\n                              <div className=\"msg-text\">\r\n                                  {text}\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n            } else {\r\n                return (\r\n                    <div key={`${className}-${i}`} className={`${className} chat-bubble`}>\r\n                        <div className=\"msg right-msg\">\r\n                          <div\r\n                              className=\"msg-img human-bg\"\r\n                          ></div>\r\n                          <div className=\"msg-bubble\">\r\n                              <div className=\"msg-info\">\r\n                                <div className=\"msg-info-name\">You</div>\r\n                                  <div className=\"msg-info-time\">{this.formatDate()}</div>\r\n                              </div>\r\n      \r\n                              <div className=\"msg-text\">\r\n                                  {text}\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n            }\r\n        };\r\n  \r\n        const chat = this.state.conversation.map((e, index) =>\r\n        ChatBubble(e.text, index, e.user));\r\n        return(\r\n            <div className=\"container\">\r\n                <div id=\"container\">\r\n                    <div className=\"chat-window box hidden\" id=\"chatbot\">\r\n                        <div className=\"bot-header\">\r\n                            <div className=\"icon\"><img src={bot} className=\"bot\"></img></div>\r\n                            <h1 className=\"title-bot\" style={{'font-size': '35px'}}>Chatbot</h1>\r\n                            <label className=\"switch\">\r\n                                <input type=\"checkbox\" id=\"speech\" onChange={()=>this.changeSpeech()}/>\r\n                                <span className=\"slider round\"></span>\r\n                            </label>\r\n                            <div className=\"label-speech\">\r\n                                <label>Speech</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"conversation-view\" id=\"message\">{chat}</div>\r\n                        <div className=\"message-box\">\r\n                            \r\n                            <form className=\"form-input\" onSubmit={this.handleSubmit}>\r\n                                <div className=\"icon-voice\">\r\n                                    <button id=\"voice\" className=\"speak-icon\">\r\n                                        <FontAwesomeIcon icon={faMicrophone} onClick={this.handleVoice}/>\r\n                                    </button>\r\n                                </div>\r\n                                <input\r\n                                    value={this.state.userMessage}\r\n                                    onInput={this.handleChange}\r\n                                    className=\"text-input\"\r\n                                    type=\"text\"\r\n                                    autoFocus\r\n                                    placeholder=\"Type your message\"\r\n                                />\r\n                                \r\n                                <button id=\"send-btn\" className=\"button-send\" value={this.state.userMessage}\r\n                                    onInput={this.handleChange}>Send</button>\r\n                                \r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"messenge\" onClick={this.openChatbot}>\r\n                        <FontAwesomeIcon icon={faCommentDots} className=\"icon-mess\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ChatBot;","import React, { useEffect } from \"react\";\r\nimport \"../css/style.css\";\r\nimport pic3 from \"../Image/mypicture3.png\";\r\nimport background from '../Image/peaceful.jpg'\r\nimport { Link } from \"react-router-dom\";\r\nimport ChatBot from \"./ChatBot\"\r\n\r\nfunction HomePage() {\r\n\r\n  useEffect(() => {\r\n    document.body.style.backgroundImage = `url(${background})`;\r\n    document.body.style.backgroundRepeat = \"no-repeat\";\r\n  });\r\n\r\n  return (\r\n    <div id=\"container\">\r\n       <React.Fragment>\r\n        <ChatBot />\r\n      </React.Fragment>\r\n    \r\n      <div className=\"box\">\r\n        <img src={pic3} alt=\"thisismypicture\" className=\"box-img\"></img>\r\n        <h1>Ky Huu Dong</h1>\r\n        <h3>Da Nang City,Viet Nam</h3>\r\n        <h3>IT Major | Duy Tan University's student</h3>\r\n        <h5>\r\n          Handsome, talented, top thinking, leadership, and many other qualities\r\n          are what i have 😝.\r\n        </h5>\r\n        <ul>\r\n          <li>\r\n            <a href=\"https://www.facebook.com/huu.dong.1\" target=\"_blank\">\r\n              <i className=\"fa fa-facebook-square fa-3x\"></i>acebook\r\n            </a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://www.instagram.com/dongghuuu/\" target=\"_blank\">\r\n              <i className=\"fa fa-instagram fa-3x\"></i>Instagram\r\n            </a>\r\n          </li>\r\n        </ul>\r\n        <Link to=\"/react-deploy/updating\">\r\n          <li>\r\n            <a className=\"update\">\r\n              <i className=\"fa fa-chevron-right fa-2x\"></i>\r\n            </a>\r\n          </li>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useEffect } from 'react';\r\nimport '../css/u-style.css';\r\nimport picDog from '../Image/dogImage.jpg';\r\nimport background from '../Image/background.jpg';\r\nimport {Link} from  'react-router-dom';\r\n\r\nfunction Updating() {\r\n\r\n    useEffect(() => {\r\n            document.body.style.backgroundImage = `url(${background})`;\r\n            document.body.style.backgroundRepeat = \"no-repeat\";\r\n    }, [])\r\n\r\n\r\n        return(\r\n            <div className=\"u-box\">\r\n                <img src={picDog} alt=\"dogimage\" className=\"u-box-img\"></img>\r\n                <h2>This feature i am updating 🍔</h2>\r\n\r\n                <Link to='/react-deploy/'>\r\n                    <a><i className=\"fa fa-chevron-left fa-3x\"></i></a>\r\n                 </Link>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Updating;","import React, { useState } from \"react\";\nimport HomePage from \"./Components/HomePage\";\nimport Updating from \"./Components/updating\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div className=\"container\">\n          \n            <Route  exact path=\"/react-deploy/\" component={HomePage}></Route>\n            <Route path=\"/react-deploy/updating\" component={Updating}></Route>\n          \n        </div>\n      </Router>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}